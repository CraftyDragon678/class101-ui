{"code":"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { gray200, gray600 } from '../Colors';\r\nconst SPINNER_TRACK = 'M 50,50 m 0,-44.5 a 44.5,44.5 0 1 1 0,89 a 44.5,44.5 0 1 1 0,-89';\r\nconst PATH_LENGTH = 280;\r\nconst STROKE_WIDTH = 4;\r\nconst strokeWidth = (STROKE_WIDTH * 100) / 50;\r\nconst strokeOffset = PATH_LENGTH - PATH_LENGTH * 0.25;\r\nconst SpinnerHead = styled.path `\n  transform-origin: center;\n  transition: stroke-dashoffset 2s cubic-bezier(0.4, 1, 0.75, 0.9);\n  stroke: ${props => props.backgroundColor || gray600};\n  stroke-linecap: round;\n`;\r\nconst SpinnerTrack = styled.path `\n  stroke: ${props => props.color || gray200};\n`;\r\nconst SpinnerContainer = styled.div `\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  overflow: visible;\n  vertical-align: middle;\n\n  svg {\n    display: block;\n  }\n\n  path {\n    fill-opacity: 0;\n  }\n`;\r\nconst SpinnerAnimation = styled.span `\n  @keyframes pt-spinner-animation {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n  animation: pt-spinner-animation 0.62s ease-in-out infinite;\n`;\r\nconst Container = styled.div `\n  display: inline-block;\n`;\r\nexport default ({ size = 50, backgroundColor, color, ...restProps }) => (React.createElement(Container, Object.assign({}, restProps),\r\n    React.createElement(SpinnerContainer, null,\r\n        React.createElement(SpinnerAnimation, null,\r\n            React.createElement(\"svg\", { height: size, width: size, viewBox: \"0 0 100 100\", strokeWidth: strokeWidth },\r\n                React.createElement(SpinnerTrack, { color: color, d: SPINNER_TRACK }),\r\n                React.createElement(SpinnerHead, { backgroundColor: backgroundColor, d: SPINNER_TRACK, pathLength: PATH_LENGTH, strokeDasharray: `${PATH_LENGTH} ${PATH_LENGTH}`, strokeDashoffset: strokeOffset }))))));\r\n","dts":{"name":"/Users/baehyeonseung/pedaling/class101-ui/Spinner/index.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\ninterface Props {\r\n    size?: number;\r\n    backgroundColor?: string;\r\n    color?: string;\r\n}\r\ndeclare const _default: ({ size, backgroundColor, color, ...restProps }: Props) => JSX.Element;\r\nexport default _default;\r\n"}}
