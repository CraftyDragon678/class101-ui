{"code":"// @flow\r\nimport React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { orange500, gray800, gray500, gray400, gray300, gray000, redError, gray600 } from '../Colors';\r\nimport { body2Black } from '../TextStyles';\r\nconst StyledTextarea = styled.textarea `\n  ${body2Black}\n  border-radius: 1px;\n  background-color: white;\n  border: solid 1px ${gray300};\n  width: 100%;\n  height: 104px;\n  padding: 12px 16px;\n  box-sizing: border-box;\n\n  &:hover {\n    border: solid 1px ${gray400};\n  }\n  &:disabled {\n    background-color: ${gray000};\n    &:hover {\n      cursor: not-allowed;\n    }\n  }\n  &:focus {\n    outline: none;\n    border-color: ${gray800};\n  }\n  &::-webkit-input-placeholder {\n    color: ${gray500};\n  }\n  &::-moz-placeholder {\n    color: ${gray500};\n  }\n  &:-ms-input-placeholder {\n    color: ${gray500};\n  }\n  &:-moz-placeholder {\n    color: ${gray500};\n  }\n\n  &.error {\n    border: solid 1px ${redError};\n  }\n\n  &.warn {\n    border: solid 1px ${orange500};\n  }\n`;\r\nconst DescriptionStyle = css `\n  margin: 0;\n  margin-top: 4px;\n  font-size: 11px;\n  line-height: 16px;\n  font-weight: normal;\n\n  * {\n    vertical-align: middle;\n  }\n`;\r\nconst ErrorText = styled.h6 `\n  ${DescriptionStyle};\n  color: ${redError};\n`;\r\nconst WarnText = styled.h6 `\n  ${DescriptionStyle};\n  color: ${orange500};\n`;\r\nconst AllowText = styled.h6 `\n  ${DescriptionStyle};\n  color: ${gray600};\n`;\r\nconst Container = styled.div `\n  display: ${props => (props.inline ? 'inline-block' : 'block')};\n`;\r\nconst DescriptionIcon = styled.img.attrs({ alt: '!' }) `\n  width: 16px;\n  height: 16px;\n  margin-right: 2px;\n`;\r\nexport default class Textarea extends React.PureComponent {\r\n    render() {\r\n        const { className, style, inputStyle, inline, allowMessage, warnMessage, errorMessage, ...restProps } = this.props;\r\n        return (React.createElement(Container, { style: style, inline: inline },\r\n            React.createElement(StyledTextarea, Object.assign({ className: `${className || ''} ${errorMessage ? ' error' : ''} ${warnMessage ? ' warn' : ''}`, style: inputStyle }, restProps)),\r\n            allowMessage && !errorMessage && React.createElement(AllowText, null, allowMessage),\r\n            errorMessage && (React.createElement(ErrorText, null,\r\n                React.createElement(DescriptionIcon, { src: \"https://s3.ap-northeast-2.amazonaws.com/class101-ui/images/ic-danger-red.png\" }),\r\n                React.createElement(\"span\", null, errorMessage))),\r\n            warnMessage && (React.createElement(WarnText, null,\r\n                React.createElement(DescriptionIcon, { src: \"https://s3.ap-northeast-2.amazonaws.com/class101-ui/images/ic-danger-yellow.png\" }),\r\n                React.createElement(\"span\", null, warnMessage)))));\r\n    }\r\n}\r\n","dts":{"name":"/Users/baehyeonseung/pedaling/class101-ui/Textarea/index.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\r\ninterface Props {\r\n    className?: string;\r\n    style?: {};\r\n    inputStyle?: {};\r\n    inline?: boolean;\r\n    allowMessage?: string;\r\n    warnMessage?: string;\r\n    errorMessage?: string;\r\n}\r\nexport default class Textarea extends React.PureComponent<Props> {\r\n    render(): JSX.Element;\r\n}\r\nexport {};\r\n"}}
