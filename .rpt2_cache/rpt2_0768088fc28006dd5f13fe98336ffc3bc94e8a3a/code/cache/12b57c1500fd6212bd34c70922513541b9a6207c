{"code":"import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport Badge from '../Badge';\r\nimport { white } from '../Colors';\r\nimport { body1BlackBold, subheadingBlackBold } from '../TextStyles';\r\nconst BORDER_SIZE = 1;\r\nconst Title = styled.span `\n  ${body1BlackBold};\n  transition: font-size 0.4s ease-in-out;\n`;\r\nconst InnerHeader = styled.div `\n  padding: 10px 24px;\n  cursor: pointer;\n  transition: padding 0.4s ease-in-out;\n\n  div,\n  span {\n    vertical-align: middle;\n  }\n`;\r\nconst Chevron = styled.img.attrs({\r\n    src: 'https://s3.ap-northeast-2.amazonaws.com/class101-ui/images/ic-chevron-gray.png',\r\n    alt: '>',\r\n}) `\n  width: 24px;\n  height: 24px;\n  position: absolute;\n  right: 24px;\n  transition: transform 0.4s ease-in-out, top 0.4s ease-in-out;\n  transform: rotate(${props => props.rotate || 270}deg);\n`;\r\nconst Container = styled.div `\n  z-index: ${props => (props.isOpened ? props.openedZIndex : props.zIndex) || 2001};\n  position: ${props => (props.fullScreen ? 'fixed' : 'relative')};\n  width: ${props => (props.fullScreen ? '100vw' : '100%')};\n  height: ${props => (props.fullScreen ? '90vh' : '100%')};\n  bottom: calc(48px - 100%);\n  left: 0;\n  overflow: ${props => (props.fullScreen ? 'visible' : 'hidden')};\n  transition: transform 0.4s ease-in-out;\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n  background-color: ${white};\n  box-shadow: 0 -1px 3px -1px rgba(41, 42, 43, 0.16), 0 0 1px 1px rgba(0, 0, 0, 0.04);\n  box-sizing: border-box;\n  zoom: 1;\n  ${props => props.isOpened\r\n    ? css `\n          transform: translateY(calc(48px - 100% + ${BORDER_SIZE}px));\n\n          ${Title} {\n            ${subheadingBlackBold};\n          }\n\n          ${InnerHeader} {\n            padding-top: 24px;\n          }\n\n          ${Chevron} {\n            top: ${24 - BORDER_SIZE}px;\n          }\n        `\r\n    : css `\n          transform: translateY(${props => (props.fullScreen ? `calc(-10% - ${BORDER_SIZE + 1}px)` : 0)});\n\n          ${Chevron} {\n            top: ${12 - BORDER_SIZE}px;\n          }\n        `}\n`;\r\nconst Header = styled.div `\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n  background-color: ${white};\n`;\r\nconst BadgeCounter = styled(Badge) `\n  margin-left: 4px;\n`;\r\nconst Content = styled.div `\n  transition: margin 0.4s ease-in-out;\n  margin-top: ${props => props.marginTop || 0}px;\n  width: 100%;\n  height: calc(${props => (props.fullScreen ? 90 : 100)}% - ${props => props.marginTop || 0}px - ${BORDER_SIZE + 3}px);\n  overflow: auto;\n  padding: 0 24px;\n`;\r\nconst FixedContent = styled.div `\n  padding: 0 24px 10px;\n`;\r\nconst BackgroundWindow = styled.div `\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.7);\n  overflow: visible;\n  z-index: ${props => (props.zIndex ? props.zIndex - 1 : 2000)};\n`;\r\nexport default class BottomSheet extends React.PureComponent {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.state = {\r\n            isOpened: false,\r\n        };\r\n        this.headerElement = null;\r\n        this.onChangeToggle = () => {\r\n            const { isOpened } = this.state;\r\n            this.setState({ isOpened: !isOpened });\r\n        };\r\n        this.preventDefault = (e) => {\r\n            e.preventDefault();\r\n        };\r\n    }\r\n    render() {\r\n        const { title, renderFixedContent, badgeCount, renderContent, fullScreen = true, zIndex, openedZIndex, ...restProps } = this.props;\r\n        const isOpened = this.props.isOpened || this.state.isOpened;\r\n        const element = (React.createElement(Container, Object.assign({ isOpened: isOpened, fullScreen: fullScreen, zIndex: zIndex, openedZIndex: openedZIndex }, restProps),\r\n            this.headerElement && this.headerElement.clientHeight && renderContent && (React.createElement(Content, { fullScreen: fullScreen, marginTop: this.headerElement.clientHeight + 17 }, renderContent())),\r\n            React.createElement(Header, { ref: ref => {\r\n                    if (!this.headerElement)\r\n                        this.headerElement = ref;\r\n                } },\r\n                React.createElement(InnerHeader, { onMouseDown: this.onChangeToggle, onTouchStart: this.onChangeToggle, onTouchEnd: this.preventDefault },\r\n                    React.createElement(Title, null, title || ''),\r\n                    badgeCount && React.createElement(BadgeCounter, null, badgeCount),\r\n                    React.createElement(Chevron, { rotate: isOpened ? 90 : 270 })),\r\n                renderFixedContent && React.createElement(FixedContent, null, renderFixedContent()))));\r\n        if (fullScreen) {\r\n            return (React.createElement(\"div\", null,\r\n                isOpened && (React.createElement(BackgroundWindow, { zIndex: openedZIndex || zIndex, onMouseDown: this.onChangeToggle, onTouchStart: this.onChangeToggle, onTouchEnd: this.preventDefault })),\r\n                element));\r\n        }\r\n        return element;\r\n    }\r\n}\r\n","dts":{"name":"/Users/baehyeonseung/pedaling/class101-ui/BottomSheet/index.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\r\ninterface ContainerProps {\r\n    fullScreen?: boolean;\r\n    zIndex?: number;\r\n    openedZIndex?: number;\r\n}\r\ninterface Props extends ContainerProps {\r\n    isOpened?: boolean;\r\n    title: string;\r\n    badgeCount?: number;\r\n    renderContent: () => HTMLElement;\r\n    renderFixedContent: () => HTMLElement;\r\n}\r\ninterface State {\r\n    isOpened: boolean;\r\n}\r\nexport default class BottomSheet extends React.PureComponent<Props, State> {\r\n    readonly state: {\r\n        isOpened: boolean;\r\n    };\r\n    private headerElement;\r\n    render(): JSX.Element;\r\n    private onChangeToggle;\r\n    private preventDefault;\r\n}\r\nexport {};\r\n"}}
